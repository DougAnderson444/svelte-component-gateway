{"version":3,"file":"index.svelte-81020215.js","sources":["../../../../../../src/lib/IFrame.svelte","../../../../../../src/lib/iframeSrc/constants.js","../../../../../../src/lib/Gateway.svelte","../../../../../../src/lib/FetchComponent.svelte","../../../../../runtime/app/stores.js","../../../../../../src/routes/index.svelte"],"sourcesContent":["<script>\r\n\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/sandbox\r\n\texport let iframe = null;\r\n\texport let srcdoc;\r\n\texport let rendered;\r\n\r\n\tlet offsetWidth;\r\n\tlet sendWidth;\r\n\tlet channel;\r\n\r\n\t// unsafe hack: https://bugzilla.mozilla.org/show_bug.cgi?id=1389198\r\n\t// let sandbox = 'allow-scripts allow-same-origin'; // danger zone, but needed for camera/mic access\r\n\tlet sandbox = 'allow-scripts';\r\n\r\n\t// synchronize the width of the parent container and the iframe child\r\n\t$: iframe && iframe.addEventListener('load', handleLoad);\r\n\r\n\t// Wait for the iframe to load, then configure \"width sender\"\r\n\tasync function handleLoad() {\r\n\t\tif (!iframe || !offsetWidth) throw new Error('Missing offsetWidth');\r\n\r\n\t\tchannel = new MessageChannel();\r\n\r\n\t\tchannel.port1.onmessage = (e) => {\r\n\t\t\t// console.log('WIDTH MESSAGE', { e: e.data });\r\n\t\t\t// e.data; // do something with the reply?\r\n\t\t};\r\n\t\tsendWidth = () => {\r\n\t\t\tiframe.contentWindow.postMessage(\r\n\t\t\t\t{ offsetWidth }, // push the details to loadEsModuleComponent({ esModule, props }) in the iframe\r\n\t\t\t\t'*', // there's only 1 contentWindow on the iframe so it' safe to use '*' as origin\r\n\t\t\t\t[channel.port2]\r\n\t\t\t); // enables the iframe to send messages containing prop updates back to the parent\r\n\t\t};\r\n\t}\r\n\r\n\t$: if (offsetWidth && sendWidth) sendWidth();\r\n\r\n\t$: if (iframe && channel) {\r\n\t\t/**\r\n\t\t * Normally you wouldn't set both allow-scripts and allow-same-origin\r\n\t\t * Because the iframe can remove sandbox attribute and reload the iframe\r\n\t\t * However with svelte we can detect reload of iframe here, and add it back always\r\n\t\t * So this risk is mitigated\r\n\t\t */\r\n\t\t// check if iframe element has a sandbox attribute on it\r\n\t\tif (\r\n\t\t\t!iframe.getAttribute('sandbox') ||\r\n\t\t\t(iframe.getAttribute('sandbox') && iframe.sandbox != sandbox)\r\n\t\t) {\r\n\t\t\t// if sandbox was removed, reload this iframe\r\n\t\t\tiframe.contentWindow.location.reload();\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div class=\"iframe-container\">\r\n\t<div class=\"header\">\r\n\t\t{#if !rendered}\r\n\t\t\tRendering...\r\n\t\t{/if}\r\n\t</div>\r\n\t<div class=\"iframe-inner\">\r\n\t\t<iframe\r\n\t\t\t{sandbox}\r\n\t\t\tallow=\"camera *;microphone *\"\r\n\t\t\ttitle=\"Rendered Component\"\r\n\t\t\tbind:this={iframe}\r\n\t\t\t{srcdoc}\r\n\t\t\tbind:offsetWidth\r\n\t\t\tallowfullscreen\r\n\t\t/>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.iframe-container {\r\n\t\tdisplay: flex;\r\n\t\tflex: 1;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\t-webkit-border-radius: 4px;\r\n\t\t-moz-border-radius: 4px;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 0.8rem;\r\n\t\ttext-transform: uppercase;\r\n\t\tcolor: rgba(0, 0, 0, 0.7);\r\n\t}\r\n\tiframe {\r\n\t\tdisplay: flex;\r\n\t\tflex: 1;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder: 0;\r\n\t}\r\n\r\n\t.iframe-inner {\r\n\t\tdisplay: flex;\r\n\t\tflex: 1;\r\n\t\theight: 100%;\r\n\t}\r\n</style>\r\n","export const CHANGE = 'change';\r\n","<script>\r\n\timport IFrame from './IFrame.svelte';\r\n\timport { CHANGE } from './iframeSrc/constants.js';\r\n\timport { createEventDispatcher } from 'svelte';\r\n\timport { onMount } from 'svelte';\r\n\t// import srcdoc from './srcdoc/bundled.html?raw'; // Vite way of importing a file as text\r\n\r\n\texport let esModule; // TODO: Handle error if not found\r\n\texport let css = null;\r\n\texport let props; // the consumer of this <Gateway bind:props /> component should bind the props to get updates\r\n\texport let rendered = false;\r\n\r\n\tlet srcdoc;\r\n\r\n\tonMount(async () => {\r\n\t\tconst strUrl = new URL('./srcdoc/bundled.html', location.href);\r\n\t\t// fetch source code from ./srcdoc/bundled.html\r\n\t\tconst response = await fetch(strUrl);\r\n\t\tsrcdoc = await response.text();\r\n\t\tconsole.log({ srcdoc });\r\n\t});\r\n\r\n\t// refresh/reload when esModule changes\r\n\t$: if (esModule && iframe) handleLoad();\r\n\r\n\tlet iframe;\r\n\tlet setProps;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\t// this fires when props change; emits an event to update any listeners consuming this compiled component\r\n\t// $: if (props) dispatch(CHANGE, props);\r\n\r\n\t$: iframe && iframe.addEventListener('load', handleLoad);\r\n\r\n\t// Wait for the iframe to load, then configure it\r\n\tasync function handleLoad() {\r\n\t\tif (!esModule || !iframe) throw new Error('Missing esModule');\r\n\r\n\t\tconst channel = new MessageChannel();\r\n\r\n\t\tchannel.port1.onmessage = (e) => {\r\n\t\t\t// props = { ...props, ...e.data }; // update props on any reply from child\r\n\t\t\trendered = true;\r\n\t\t\tif (props || e.data) dispatch(CHANGE, Object.assign({}, props, e.data)); // this fires when props change; emits an event to update any listeners consuming this compiled component\r\n\r\n\t\t\tsetProps = (props) => {\r\n\t\t\t\tiframe.contentWindow.postMessage(\r\n\t\t\t\t\t{ setProps: props }, // push the details to the iframe\r\n\t\t\t\t\t'*' // there's only 1 contentWindow on the iframe so it' safe to use '*' as origin\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tiframe.contentWindow.postMessage(\r\n\t\t\t{ load: { esModule, props, css } }, // push the details to loadEsModuleComponent({ esModule, props }) in the iframe\r\n\t\t\t'*', // there's only 1 contentWindow on the iframe so it' safe to use '*' as origin\r\n\t\t\t[channel.port2]\r\n\t\t); // enables the iframe to send messages containing prop updates back to the parent\r\n\t}\r\n\r\n\t// update props as they change\r\n\t$: if (props && setProps) setProps(props);\r\n</script>\r\n\r\n<IFrame bind:iframe {srcdoc} {rendered} />\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let url;\r\n\tlet component;\r\n\r\n\tlet mounted = false;\r\n\r\n\tonMount(() => {\r\n\t\tmounted = true;\r\n\t\turl = new URL(document.location).searchParams.get('url') || url;\r\n\t\twindow.cachedURL = url;\r\n\t\tdoFetch(url);\r\n\t});\r\n\r\n\t$: if (mounted && url && window.cachedURL != url) doFetch(url);\r\n\r\n\tlet fetched;\r\n\r\n\tasync function doFetch(url) {\r\n\t\tif (!url) return;\r\n\t\ttry {\r\n\t\t\twindow.cachedURL = url; // reset cache, avoiding duplicate downloads\r\n\t\t\tfetched = await fetch(url);\r\n\t\t\tif (!fetched.ok) throw new Error(fetched.statusText);\r\n\t\t\tconsole.log('fetching', url, { fetched });\r\n\t\t\tconst text = await fetched.text();\r\n\t\t\tconsole.log('fetched:', { text });\r\n\r\n\t\t\tcomponent = text;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div>\r\n\tLoading from: {url}\r\n</div>\r\n<slot {component} />\r\n","import { getContext } from 'svelte';\nimport { browser } from './env.js';\nimport '../env.js';\n\n// TODO remove this (for 1.0? after 1.0?)\nlet warned = false;\nfunction stores() {\n\tif (!warned) {\n\t\tconsole.error('stores() is deprecated; use getStores() instead');\n\t\twarned = true;\n\t}\n\treturn getStores();\n}\n\n/**\n * @type {import('$app/stores').getStores}\n */\nconst getStores = () => {\n\tconst stores = getContext('__svelte__');\n\n\treturn {\n\t\tpage: {\n\t\t\tsubscribe: stores.page.subscribe\n\t\t},\n\t\tnavigating: {\n\t\t\tsubscribe: stores.navigating.subscribe\n\t\t},\n\t\t// TODO remove this (for 1.0? after 1.0?)\n\t\t// @ts-expect-error - deprecated, not part of type definitions, but still callable\n\t\tget preloading() {\n\t\t\tconsole.error('stores.preloading is deprecated; use stores.navigating instead');\n\t\t\treturn {\n\t\t\t\tsubscribe: stores.navigating.subscribe\n\t\t\t};\n\t\t},\n\t\tsession: stores.session,\n\t\tupdated: stores.updated\n\t};\n};\n\n/** @type {typeof import('$app/stores').page} */\nconst page = {\n\t/** @param {(value: any) => void} fn */\n\tsubscribe(fn) {\n\t\tconst store = getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @type {typeof import('$app/stores').navigating} */\nconst navigating = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().navigating;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @param {string} verb */\nconst throw_error = (verb) => {\n\tthrow new Error(\n\t\tbrowser\n\t\t\t? `Cannot ${verb} session store before subscribing`\n\t\t\t: `Can only ${verb} session store in browser`\n\t);\n};\n\n/** @type {typeof import('$app/stores').session} */\nconst session = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().session;\n\n\t\tif (browser) {\n\t\t\tsession.set = store.set;\n\t\t\tsession.update = store.update;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tset: () => throw_error('set'),\n\tupdate: () => throw_error('update')\n};\n\n/** @type {typeof import('$app/stores').updated} */\nconst updated = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().updated;\n\n\t\tif (browser) {\n\t\t\tupdated.check = store.check;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tcheck: () => throw_error('check')\n};\n\nexport { getStores, navigating, page, session, stores, updated };\n","<script>\n\timport { onMount } from 'svelte';\n\timport { Gateway, FetchComponent } from '@douganderson444/svelte-component-gateway';\n\timport { page } from '$app/stores';\n\t// import { PanHandle } from '@douganderson444/svelte-panhandle';\n\t// import { Resizer } from '@douganderson444/svelte-resizable';\n\n\t// import component from '../../../awesome-peerpiper-components/compiled/@peerpiper/ContactCard.svelte.js?raw';\n\n\tlet url =\n\t\t'https://raw.githubusercontent.com/PeerPiper/awesome-peerpiper-components/master/compiled/%40peerpiper/ContactCard.svelte.js';\n\n\tlet props = {\n\t\tprofile: {\n\t\t\tfirstName: 'Doug',\n\t\t\tlastName: 'Anderson'\n\t\t}\n\t};\n\n\tlet width;\n\tlet height;\n\tlet vh;\n\n\tonMount(() => {\n\t\turl = $page.url.searchParams.get('url') || url;\n\t\twindow.cachedURL = url;\n\t\thandleViewportSize();\n\t});\n\n\tfunction handleViewportSize(_) {\n\t\tvh = window.innerHeight * 0.01;\n\t\theight = window.innerHeight;\n\t\twidth = document?.body.clientWidth; // excludes scrollbar\n\t}\n\n\tfunction handleChange(e) {\n\t\tprops = Object.assign({}, props, e.detail);\n\t}\n</script>\n\n<svelte:window on:resize={handleViewportSize} />\n\n<div class=\"app\" style=\"--vh: {vh}px; height: calc(var(--vh, 1vh) * 100);\">\n\t<h1 class=\"text-3xl font-bold py-2\">Svelte Component Gateway</h1>\n\n\t<!-- Fetch gets the component from the interwebs and passes it back up here through let:component  -->\n\t<FetchComponent {url} let:component>\n\t\tProps: {JSON.stringify(props)}\n\n\t\t<!-- absolute removed -->\n\t\t<div\n\t\t\tclass=\"border flex-auto  bg-orange-50/50 h-96 w-full\"\n\t\t\tstyle=\"top: 105px; left:10px; min-width: 100px; min-height: 100px;\"\n\t\t>\n\t\t\t{#if component}\n\t\t\t\t<!-- on:change bubbles the emited 'change' event to the parent component, if bind:props isn't avail -->\n\t\t\t\t<Gateway esModule={component} {props} {width} {height} on:change={handleChange} />\n\t\t\t\t<!-- <PanHandle /> -->\n\t\t\t\t<!-- <Resizer /> -->\n\t\t\t{/if}\n\t\t</div>\n\t</FetchComponent>\n</div>\n\n<style>\n\t.app {\n\t\theight: 100vh; /* Fallback for browsers that do not support Custom Properties */\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n</style>\n"],"names":["create_if_block"],"mappings":"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"}