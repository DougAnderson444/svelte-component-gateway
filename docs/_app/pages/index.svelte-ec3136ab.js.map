{"version":3,"file":"index.svelte-ec3136ab.js","sources":["../../../../../src/lib/IFrame.svelte","../../../../../src/lib/srcdoc/bundled.html?raw","../../../../../src/lib/iframeSrc/constants.js","../../../../../node_modules/penpal/lib/enums.js","../../../../../node_modules/penpal/lib/createDestructor.js","../../../../../node_modules/penpal/lib/createLogger.js","../../../../../node_modules/penpal/lib/parent/getOriginFromSrc.js","../../../../../node_modules/penpal/lib/errorSerialization.js","../../../../../node_modules/penpal/lib/connectCallReceiver.js","../../../../../node_modules/penpal/lib/generateId.js","../../../../../node_modules/penpal/lib/methodSerialization.js","../../../../../node_modules/penpal/lib/connectCallSender.js","../../../../../node_modules/penpal/lib/parent/handleAckMessageFactory.js","../../../../../node_modules/penpal/lib/parent/handleSynMessageFactory.js","../../../../../node_modules/penpal/lib/parent/monitorIframeRemoval.js","../../../../../node_modules/penpal/lib/startConnectionTimeout.js","../../../../../node_modules/penpal/lib/parent/validateIframeHasSrcOrSrcDoc.js","../../../../../node_modules/penpal/lib/parent/connectToChild.js","../../../../../src/lib/Gateway.svelte","../../../../runtime/app/stores.js","../../../../../src/routes/index.svelte"],"sourcesContent":["<script>\r\n\texport let iframe;\r\n\texport let srcdoc;\r\n\texport let serializedSource;\r\n</script>\r\n\r\n<div class=\"iframe-container\">\r\n\t<div class=\"header\">\r\n\t\t{#if !serializedSource}\r\n\t\t\tRendering...\r\n\t\t{/if}\r\n\t</div>\r\n\t<div class=\"iframe-inner\">\r\n\t\t<iframe title=\"Rendered Component\" bind:this={iframe} {srcdoc} />\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.iframe-container {\r\n\t\theight: 100%;\r\n\t\t-webkit-border-radius: 4px;\r\n\t\t-moz-border-radius: 4px;\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\r\n\t.header {\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 0.8rem;\r\n\t\ttext-transform: uppercase;\r\n\t\tcolor: rgba(0, 0, 0, 0.7);\r\n\t}\r\n\tiframe {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder: 0;\r\n\t}\r\n\r\n\t.iframe-inner {\r\n\t\theight: 100%;\r\n\t}\r\n</style>\r\n","export default \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\t<head>\\n\\t\\t<meta charset=\\\"utf-8\\\" />\\n\\t\\t<meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\" />\\n\\n\\t\\t<script defer type=\\\"module\\\">\\n\\t\\t\\tvar app=function(){\\\"use strict\\\";function e(){}function t(e){return e()}function n(){return Object.create(null)}function o(e){e.forEach(t)}function r(e){return\\\"function\\\"==typeof e}function i(e,t){return e!=e?t==t:e!==t||e&&\\\"object\\\"==typeof e||\\\"function\\\"==typeof e}function s(e){e.parentNode.removeChild(e)}function c(e){return document.createElement(e)}function a(e,t,n,o){return e.addEventListener(t,n,o),()=>e.removeEventListener(t,n,o)}let d,l;function u(){if(void 0===d){d=!1;try{\\\"undefined\\\"!=typeof window&&window.parent&&window.parent.document}catch(e){d=!0}}return d}function f(e){l=e}function p(e){(function(){if(!l)throw new Error(\\\"Function called outside component initialization\\\");return l})().$$.on_mount.push(e)}const g=[],m=[],h=[],y=[],$=Promise.resolve();let w=!1;function v(e){h.push(e)}const b=new Set;let E=0;function k(){const e=l;do{for(;E<g.length;){const e=g[E];E++,f(e),C(e.$$)}for(f(null),g.length=0,E=0;m.length;)m.pop()();for(let e=0;e<h.length;e+=1){const t=h[e];b.has(t)||(b.add(t),t())}h.length=0}while(g.length);for(;y.length;)y.pop()();w=!1,b.clear(),f(e)}function C(e){if(null!==e.fragment){e.update(),o(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(v)}}const R=new Set;function x(e,t){-1===e.$$.dirty[0]&&(g.push(e),w||(w=!0,$.then(k)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function S(i,c,a,d,u,p,g,m=[-1]){const h=l;f(i);const y=i.$$={fragment:null,ctx:null,props:p,update:e,not_equal:u,bound:n(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(c.context||(h?h.$$.context:[])),callbacks:n(),dirty:m,skip_bound:!1,root:c.target||h.$$.root};g&&g(y.root);let $=!1;if(y.ctx=a?a(i,c.props||{},((e,t,...n)=>{const o=n.length?n[0]:t;return y.ctx&&u(y.ctx[e],y.ctx[e]=o)&&(!y.skip_bound&&y.bound[e]&&y.bound[e](o),$&&x(i,e)),t})):[],y.update(),$=!0,o(y.before_update),y.fragment=!!d&&d(y.ctx),c.target){if(c.hydrate){const e=function(e){return Array.from(e.childNodes)}(c.target);y.fragment&&y.fragment.l(e),e.forEach(s)}else y.fragment&&y.fragment.c();c.intro&&((w=i.$$.fragment)&&w.i&&(R.delete(w),w.i(b))),function(e,n,i,s){const{fragment:c,on_mount:a,on_destroy:d,after_update:l}=e.$$;c&&c.m(n,i),s||v((()=>{const n=a.map(t).filter(r);d?d.push(...n):o(n),e.$$.on_mount=[]})),l.forEach(v)}(i,c.target,c.anchor,c.customElement),k()}var w,b;f(h)}var _,j,M,L,A;!function(e){e.Call=\\\"call\\\",e.Reply=\\\"reply\\\",e.Syn=\\\"syn\\\",e.SynAck=\\\"synAck\\\",e.Ack=\\\"ack\\\"}(_||(_={})),function(e){e.Fulfilled=\\\"fulfilled\\\",e.Rejected=\\\"rejected\\\"}(j||(j={})),function(e){e.ConnectionDestroyed=\\\"ConnectionDestroyed\\\",e.ConnectionTimeout=\\\"ConnectionTimeout\\\",e.NoIframeSrc=\\\"NoIframeSrc\\\"}(M||(M={})),function(e){e.DataCloneError=\\\"DataCloneError\\\"}(L||(L={})),function(e){e.Message=\\\"message\\\"}(A||(A={}));const N=({name:e,message:t,stack:n})=>({name:e,message:t,stack:n});let O=0;var D=()=>++O;const F=e=>e?e.split(\\\".\\\"):[],H=(e,t,n)=>{const o=F(t);return o.reduce(((e,t,r)=>(void 0===e[t]&&(e[t]={}),r===o.length-1&&(e[t]=n),e[t])),e),e},I=(e,t)=>{const n={};return Object.keys(e).forEach((o=>{const r=e[o],i=((e,t)=>{const n=F(t||\\\"\\\");return n.push(e),(e=>e.join(\\\".\\\"))(n)})(o,t);\\\"object\\\"==typeof r&&Object.assign(n,I(r,i)),\\\"function\\\"==typeof r&&(n[i]=r)})),n};var U=(e,t,n,o,r)=>{const{localName:i,local:s,remote:c,originForSending:a,originForReceiving:d}=t;let l=!1;r(`${i}: Connecting call sender`);const u=e=>(...t)=>{let n;r(`${i}: Sending ${e}() call`);try{c.closed&&(n=!0)}catch(e){n=!0}if(n&&o(),l){const t=new Error(`Unable to send ${e}() call due to destroyed connection`);throw t.code=M.ConnectionDestroyed,t}return new Promise(((n,o)=>{const l=D(),u=t=>{if(t.source!==c||t.data.penpal!==_.Reply||t.data.id!==l)return;if(\\\"*\\\"!==d&&t.origin!==d)return void r(`${i} received message from origin ${t.origin} which did not match expected origin ${d}`);const a=t.data;r(`${i}: Received ${e}() reply`),s.removeEventListener(A.Message,u);let f=a.returnValue;a.returnValueIsError&&(f=(e=>{const t=new Error;return Object.keys(e).forEach((n=>t[n]=e[n])),t})(f)),(a.resolution===j.Fulfilled?n:o)(f)};s.addEventListener(A.Message,u);const f={penpal:_.Call,id:l,methodName:e,args:t};c.postMessage(f,a)}))},f=n.reduce(((e,t)=>(e[t]=u(t),e)),{});return Object.assign(e,(e=>{const t={};for(const n in e)H(t,n,e[n]);return t})(f)),()=>{l=!0}},W=(e,t,n,o)=>{const{destroy:r,onDestroy:i}=n;return n=>{if(!(e instanceof RegExp?e.test(n.origin):\\\"*\\\"===e||e===n.origin))return void o(`Child: Handshake - Received SYN-ACK from origin ${n.origin} which did not match expected origin ${e}`);o(\\\"Child: Handshake - Received SYN-ACK, responding with ACK\\\");const s=\\\"null\\\"===n.origin?\\\"*\\\":n.origin,c={penpal:_.Ack,methodNames:Object.keys(t)};window.parent.postMessage(c,s);const a={localName:\\\"Child\\\",local:window,remote:window.parent,originForSending:s,originForReceiving:n.origin},d=((e,t,n)=>{const{localName:o,local:r,remote:i,originForSending:s,originForReceiving:c}=e;let a=!1;const d=e=>{if(e.source!==i||e.data.penpal!==_.Call)return;if(\\\"*\\\"!==c&&e.origin!==c)return void n(`${o} received message from origin ${e.origin} which did not match expected origin ${c}`);const r=e.data,{methodName:d,args:l,id:u}=r;n(`${o}: Received ${d}() call`);const f=e=>t=>{if(n(`${o}: Sending ${d}() reply`),a)return void n(`${o}: Unable to send ${d}() reply due to destroyed connection`);const r={penpal:_.Reply,id:u,resolution:e,returnValue:t};e===j.Rejected&&t instanceof Error&&(r.returnValue=N(t),r.returnValueIsError=!0);try{i.postMessage(r,s)}catch(e){if(e.name===L.DataCloneError){const t={penpal:_.Reply,id:u,resolution:j.Rejected,returnValue:N(e),returnValueIsError:!0};i.postMessage(t,s)}throw e}};new Promise((e=>e(t[d].apply(t,l)))).then(f(j.Fulfilled),f(j.Rejected))};return r.addEventListener(A.Message,d),()=>{a=!0,r.removeEventListener(A.Message,d)}})(a,t,o);i(d);const l={},u=U(l,a,n.data.methodNames,r,o);return i(u),l}};var T=(e={})=>{const{parentOrigin:t=\\\"*\\\",methods:n={},timeout:o,debug:r=!1}=e,i=(e=>(...t)=>{e&&console.log(\\\"[Penpal]\\\",...t)})(r),s=((e,t)=>{const n=[];let o=!1;return{destroy(r){o||(o=!0,t(`${e}: Destroying connection`),n.forEach((e=>{e(r)})))},onDestroy(e){o?e():n.push(e)}}})(\\\"Child\\\",i),{destroy:c,onDestroy:a}=s,d=I(n),l=W(t,d,s,i),u=new Promise(((e,n)=>{const r=((e,t)=>{let n;return void 0!==e&&(n=window.setTimeout((()=>{const n=new Error(`Connection timed out after ${e}ms`);n.code=M.ConnectionTimeout,t(n)}),e)),()=>{clearTimeout(n)}})(o,c),s=t=>{if((()=>{try{clearTimeout()}catch(e){return!1}return!0})()&&t.source===parent&&t.data&&t.data.penpal===_.SynAck){const n=l(t);n&&(window.removeEventListener(A.Message,s),r(),e(n))}};window.addEventListener(A.Message,s),(()=>{i(\\\"Child: Handshake - Sending SYN\\\");const e={penpal:_.Syn},n=t instanceof RegExp?\\\"*\\\":t;window.parent.postMessage(e,n)})(),a((e=>{window.removeEventListener(A.Message,s),e&&n(e)}))}));return{promise:u,destroy(){c()}}};function V(t){let n,o;return{c(){var e,o,r;n=c(\\\"div\\\"),e=n,o=\\\"id\\\",null==(r=\\\"app\\\")?e.removeAttribute(o):e.getAttribute(o)!==r&&e.setAttribute(o,r),v((()=>t[2].call(n)))},m(e,r){!function(e,t,n){e.insertBefore(t,n||null)}(e,n,r),o=function(e,t){\\\"static\\\"===getComputedStyle(e).position&&(e.style.position=\\\"relative\\\");const n=c(\\\"iframe\\\");n.setAttribute(\\\"style\\\",\\\"display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;\\\"),n.setAttribute(\\\"aria-hidden\\\",\\\"true\\\"),n.tabIndex=-1;const o=u();let r;return o?(n.src=\\\"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\\\\/script>\\\",r=a(window,\\\"message\\\",(e=>{e.source===n.contentWindow&&t()}))):(n.src=\\\"about:blank\\\",n.onload=()=>{r=a(n.contentWindow,\\\"resize\\\",t)}),function(e,t){e.appendChild(t)}(e,n),()=>{(o||r&&n.contentWindow)&&r(),s(n)}}(n,t[2].bind(n))},p:e,i:e,o:e,d(e){e&&s(n),o()}}}function P(e,t,n){let o,r,i,{offsetWidth:s}=t,{offsetHeight:c}=t;async function a({esModule:e,props:t}){const n=new Blob([e],{type:\\\"text/javascript\\\"});i=URL.createObjectURL(n),import(i).then((function({default:e}){e&&(o&&o.$destroy(),document.getElementById(\\\"app\\\").innerHTML=\\\"\\\",o=new e({target:document.getElementById(\\\"app\\\")||document.body,props:{...t}}),o.$on(\\\"change\\\",(e=>{console.log(\\\"change\\\",e),r.updateProps(e.detail)})),URL.revokeObjectURL(i),r.setSerializedSource())}))}return p((async()=>{const e=T({methods:{loadEsModuleComponent:a}});return r=await e.promise,()=>{o&&o.$destroy(),i&&URL.revokeObjectURL(i)}})),e.$$set=e=>{\\\"offsetWidth\\\"in e&&n(0,s=e.offsetWidth),\\\"offsetHeight\\\"in e&&n(1,c=e.offsetHeight)},[s,c,function(){s=this.offsetWidth,c=this.offsetHeight,n(0,s),n(1,c)}]}return new class extends class{$destroy(){!function(e,t){const n=e.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}(this,1),this.$destroy=e}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){var t;this.$$set&&(t=e,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}{constructor(e){super(),S(this,e,P,V,i,{offsetWidth:0,offsetHeight:1})}}({target:document.body,props:{}})}();\\n\\n\\t\\t</script>\\n\\t</head>\\n\\n\\t<body></body>\\n</html>\\n\"","export const CHANGE = 'change';\r\n","export var MessageType;\n(function (MessageType) {\n    MessageType[\"Call\"] = \"call\";\n    MessageType[\"Reply\"] = \"reply\";\n    MessageType[\"Syn\"] = \"syn\";\n    MessageType[\"SynAck\"] = \"synAck\";\n    MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\nexport var Resolution;\n(function (Resolution) {\n    Resolution[\"Fulfilled\"] = \"fulfilled\";\n    Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n    ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n    ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\nexport var NativeErrorName;\n(function (NativeErrorName) {\n    NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\nexport var NativeEventType;\n(function (NativeEventType) {\n    NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));\n","export default (localName, log) => {\n    const callbacks = [];\n    let destroyed = false;\n    return {\n        destroy(error) {\n            if (!destroyed) {\n                destroyed = true;\n                log(`${localName}: Destroying connection`);\n                callbacks.forEach((callback) => {\n                    callback(error);\n                });\n            }\n        },\n        onDestroy(callback) {\n            destroyed ? callback() : callbacks.push(callback);\n        },\n    };\n};\n","export default (debug) => {\n    /**\n     * Logs a message if debug is enabled.\n     */\n    return (...args) => {\n        if (debug) {\n            console.log('[Penpal]', ...args); // eslint-disable-line no-console\n        }\n    };\n};\n","const DEFAULT_PORT_BY_PROTOCOL = {\n    'http:': '80',\n    'https:': '443',\n};\nconst URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nconst opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n */\nexport default (src) => {\n    if (src && opaqueOriginSchemes.find((scheme) => src.startsWith(scheme))) {\n        // The origin of the child document is an opaque origin and its\n        // serialization is \"null\"\n        // https://html.spec.whatwg.org/multipage/origin.html#origin\n        return 'null';\n    }\n    // Note that if src is undefined, then srcdoc is being used instead of src\n    // and we can follow this same logic below to get the origin of the parent,\n    // which is the origin that we will need to use.\n    const location = document.location;\n    const regexResult = URL_REGEX.exec(src);\n    let protocol;\n    let hostname;\n    let port;\n    if (regexResult) {\n        // It's an absolute URL. Use the parsed info.\n        // regexResult[1] will be undefined if the URL starts with //\n        protocol = regexResult[1] ? regexResult[1] : location.protocol;\n        hostname = regexResult[2];\n        port = regexResult[4];\n    }\n    else {\n        // It's a relative path. Use the current location's info.\n        protocol = location.protocol;\n        hostname = location.hostname;\n        port = location.port;\n    }\n    // If the port is the default for the protocol, we don't want to add it to the origin string\n    // or it won't match the message's event.origin.\n    const portSuffix = port && port !== DEFAULT_PORT_BY_PROTOCOL[protocol] ? `:${port}` : '';\n    return `${protocol}//${hostname}${portSuffix}`;\n};\n","/**\n * Converts an error object into a plain object.\n */\nexport const serializeError = ({ name, message, stack, }) => ({\n    name,\n    message,\n    stack,\n});\n/**\n * Converts a plain object into an error object.\n */\nexport const deserializeError = (obj) => {\n    const deserializedError = new Error();\n    // @ts-ignore\n    Object.keys(obj).forEach((key) => (deserializedError[key] = obj[key]));\n    return deserializedError;\n};\n","import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution, } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\nexport default (info, serializedMethods, log) => {\n    const { localName, local, remote, originForSending, originForReceiving, } = info;\n    let destroyed = false;\n    const handleMessageEvent = (event) => {\n        if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n            return;\n        }\n        if (originForReceiving !== '*' && event.origin !== originForReceiving) {\n            log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n            return;\n        }\n        const callMessage = event.data;\n        const { methodName, args, id } = callMessage;\n        log(`${localName}: Received ${methodName}() call`);\n        const createPromiseHandler = (resolution) => {\n            return (returnValue) => {\n                log(`${localName}: Sending ${methodName}() reply`);\n                if (destroyed) {\n                    // It's possible to throw an error here, but it would need to be thrown asynchronously\n                    // and would only be catchable using window.onerror. This is because the consumer\n                    // is merely returning a value from their method and not calling any function\n                    // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n                    // the value of doing so is questionable. Instead, we'll just log a message.\n                    log(`${localName}: Unable to send ${methodName}() reply due to destroyed connection`);\n                    return;\n                }\n                const message = {\n                    penpal: MessageType.Reply,\n                    id,\n                    resolution,\n                    returnValue,\n                };\n                if (resolution === Resolution.Rejected &&\n                    returnValue instanceof Error) {\n                    message.returnValue = serializeError(returnValue);\n                    message.returnValueIsError = true;\n                }\n                try {\n                    remote.postMessage(message, originForSending);\n                }\n                catch (err) {\n                    // If a consumer attempts to send an object that's not cloneable (e.g., window),\n                    // we want to ensure the receiver's promise gets rejected.\n                    if (err.name === NativeErrorName.DataCloneError) {\n                        const errorReplyMessage = {\n                            penpal: MessageType.Reply,\n                            id,\n                            resolution: Resolution.Rejected,\n                            returnValue: serializeError(err),\n                            returnValueIsError: true,\n                        };\n                        remote.postMessage(errorReplyMessage, originForSending);\n                    }\n                    throw err;\n                }\n            };\n        };\n        new Promise((resolve) => resolve(serializedMethods[methodName].apply(serializedMethods, args))).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n    };\n    local.addEventListener(NativeEventType.Message, handleMessageEvent);\n    return () => {\n        destroyed = true;\n        local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n    };\n};\n","let id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\nexport default () => ++id;\n","const KEY_PATH_DELIMITER = '.';\nconst keyPathToSegments = (keyPath) => keyPath ? keyPath.split(KEY_PATH_DELIMITER) : [];\nconst segmentsToKeyPath = (segments) => segments.join(KEY_PATH_DELIMITER);\nconst createKeyPath = (key, prefix) => {\n    const segments = keyPathToSegments(prefix || '');\n    segments.push(key);\n    return segmentsToKeyPath(segments);\n};\n/**\n * Given a `keyPath`, set it to be `value` on `subject`, creating any intermediate\n * objects along the way.\n *\n * @param {Object} subject The object on which to set value.\n * @param {string} keyPath The key path at which to set value.\n * @param {Object} value The value to store at the given key path.\n * @returns {Object} Updated subject.\n */\nexport const setAtKeyPath = (subject, keyPath, value) => {\n    const segments = keyPathToSegments(keyPath);\n    segments.reduce((prevSubject, key, idx) => {\n        if (typeof prevSubject[key] === 'undefined') {\n            prevSubject[key] = {};\n        }\n        if (idx === segments.length - 1) {\n            prevSubject[key] = value;\n        }\n        return prevSubject[key];\n    }, subject);\n    return subject;\n};\n/**\n * Given a dictionary of (nested) keys to function, flatten them to a map\n * from key path to function.\n *\n * @param {Object} methods The (potentially nested) object to serialize.\n * @param {string} prefix A string with which to prefix entries. Typically not intended to be used by consumers.\n * @returns {Object} An map from key path in `methods` to functions.\n */\nexport const serializeMethods = (methods, prefix) => {\n    const flattenedMethods = {};\n    Object.keys(methods).forEach((key) => {\n        const value = methods[key];\n        const keyPath = createKeyPath(key, prefix);\n        if (typeof value === 'object') {\n            // Recurse into any nested children.\n            Object.assign(flattenedMethods, serializeMethods(value, keyPath));\n        }\n        if (typeof value === 'function') {\n            // If we've found a method, expose it.\n            flattenedMethods[keyPath] = value;\n        }\n    });\n    return flattenedMethods;\n};\n/**\n * Given a map of key paths to functions, unpack the key paths to an object.\n *\n * @param {Object} flattenedMethods A map of key paths to functions to unpack.\n * @returns {Object} A (potentially nested) map of functions.\n */\nexport const deserializeMethods = (flattenedMethods) => {\n    const methods = {};\n    for (const keyPath in flattenedMethods) {\n        setAtKeyPath(methods, keyPath, flattenedMethods[keyPath]);\n    }\n    return methods;\n};\n","import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { deserializeMethods } from './methodSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodKeyPaths Key paths of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nexport default (callSender, info, methodKeyPaths, destroyConnection, log) => {\n    const { localName, local, remote, originForSending, originForReceiving, } = info;\n    let destroyed = false;\n    log(`${localName}: Connecting call sender`);\n    const createMethodProxy = (methodName) => {\n        return (...args) => {\n            log(`${localName}: Sending ${methodName}() call`);\n            // This handles the case where the iframe has been removed from the DOM\n            // (and therefore its window closed), the consumer has not yet\n            // called destroy(), and the user calls a method exposed by\n            // the remote. We detect the iframe has been removed and force\n            // a destroy() immediately so that the consumer sees the error saying\n            // the connection has been destroyed. We wrap this check in a try catch\n            // because Edge throws an \"Object expected\" error when accessing\n            // contentWindow.closed on a contentWindow from an iframe that's been\n            // removed from the DOM.\n            let iframeRemoved;\n            try {\n                if (remote.closed) {\n                    iframeRemoved = true;\n                }\n            }\n            catch (e) {\n                iframeRemoved = true;\n            }\n            if (iframeRemoved) {\n                destroyConnection();\n            }\n            if (destroyed) {\n                const error = new Error(`Unable to send ${methodName}() call due ` + `to destroyed connection`);\n                error.code = ErrorCode.ConnectionDestroyed;\n                throw error;\n            }\n            return new Promise((resolve, reject) => {\n                const id = generateId();\n                const handleMessageEvent = (event) => {\n                    if (event.source !== remote ||\n                        event.data.penpal !== MessageType.Reply ||\n                        event.data.id !== id) {\n                        return;\n                    }\n                    if (originForReceiving !== '*' &&\n                        event.origin !== originForReceiving) {\n                        log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n                        return;\n                    }\n                    const replyMessage = event.data;\n                    log(`${localName}: Received ${methodName}() reply`);\n                    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n                    let returnValue = replyMessage.returnValue;\n                    if (replyMessage.returnValueIsError) {\n                        returnValue = deserializeError(returnValue);\n                    }\n                    (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n                };\n                local.addEventListener(NativeEventType.Message, handleMessageEvent);\n                const callMessage = {\n                    penpal: MessageType.Call,\n                    id,\n                    methodName,\n                    args,\n                };\n                remote.postMessage(callMessage, originForSending);\n            });\n        };\n    };\n    // Wrap each method in a proxy which sends it to the corresponding receiver.\n    const flattenedMethods = methodKeyPaths.reduce((api, name) => {\n        api[name] = createMethodProxy(name);\n        return api;\n    }, {});\n    // Unpack the structure of the provided methods object onto the CallSender, exposing\n    // the methods in the same shape they were provided.\n    Object.assign(callSender, deserializeMethods(flattenedMethods));\n    return () => {\n        destroyed = true;\n    };\n};\n","import connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles an ACK handshake message.\n */\nexport default (serializedMethods, childOrigin, originForSending, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    let destroyCallReceiver;\n    let receiverMethodNames;\n    // We resolve the promise with the call sender. If the child reconnects\n    // (for example, after refreshing or navigating to another page that\n    // uses Penpal, we'll update the call sender with methods that match the\n    // latest provided by the child.\n    const callSender = {};\n    return (event) => {\n        if (childOrigin !== '*' && event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received ACK message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received ACK');\n        const info = {\n            localName: 'Parent',\n            local: window,\n            remote: event.source,\n            originForSending: originForSending,\n            originForReceiving: childOrigin,\n        };\n        // If the child reconnected, we need to destroy the prior call receiver\n        // before setting up a new one.\n        if (destroyCallReceiver) {\n            destroyCallReceiver();\n        }\n        destroyCallReceiver = connectCallReceiver(info, serializedMethods, log);\n        onDestroy(destroyCallReceiver);\n        // If the child reconnected, we need to remove the methods from the\n        // previous call receiver off the sender.\n        if (receiverMethodNames) {\n            receiverMethodNames.forEach((receiverMethodName) => {\n                delete callSender[receiverMethodName];\n            });\n        }\n        receiverMethodNames = event.data.methodNames;\n        const destroyCallSender = connectCallSender(callSender, info, receiverMethodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n","import { MessageType } from '../enums';\n/**\n * Handles a SYN handshake message.\n */\nexport default (log, serializedMethods, childOrigin, originForSending) => {\n    return (event) => {\n        // Under specific timing circumstances, we can receive an event\n        // whose source is null. This seems to happen when the child iframe is\n        // removed from the DOM about the same time it has sent the SYN event.\n        // https://github.com/Aaronius/penpal/issues/85\n        if (!event.source) {\n            return;\n        }\n        if (childOrigin !== '*' && event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received SYN message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received SYN, responding with SYN-ACK');\n        const synAckMessage = {\n            penpal: MessageType.SynAck,\n            methodNames: Object.keys(serializedMethods),\n        };\n        event.source.postMessage(synAckMessage, originForSending);\n    };\n};\n","const CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\n/**\n * Monitors for iframe removal and destroys connection if iframe\n * is found to have been removed from DOM. This is to prevent memory\n * leaks when the iframe is removed from the document and the consumer\n * hasn't called destroy(). Without this, event listeners attached to\n * the window would stick around and since the event handlers have a\n * reference to the iframe in their closures, the iframe would stick\n * around too.\n */\nexport default (iframe, destructor) => {\n    const { destroy, onDestroy } = destructor;\n    const checkIframeInDocIntervalId = setInterval(() => {\n        if (!iframe.isConnected) {\n            clearInterval(checkIframeInDocIntervalId);\n            destroy();\n        }\n    }, CHECK_IFRAME_IN_DOC_INTERVAL);\n    onDestroy(() => {\n        clearInterval(checkIframeInDocIntervalId);\n    });\n};\n","import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\nexport default (timeout, callback) => {\n    let timeoutId;\n    if (timeout !== undefined) {\n        timeoutId = window.setTimeout(() => {\n            const error = new Error(`Connection timed out after ${timeout}ms`);\n            error.code = ErrorCode.ConnectionTimeout;\n            callback(error);\n        }, timeout);\n    }\n    return () => {\n        clearTimeout(timeoutId);\n    };\n};\n","import { ErrorCode } from '../enums';\nexport default (iframe) => {\n    if (!iframe.src && !iframe.srcdoc) {\n        const error = new Error('Iframe must have src or srcdoc property defined.');\n        error.code = ErrorCode.NoIframeSrc;\n        throw error;\n    }\n};\n","import { MessageType, NativeEventType } from '../enums';\nimport createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport getOriginFromSrc from './getOriginFromSrc';\nimport handleAckMessageFactory from './handleAckMessageFactory';\nimport handleSynMessageFactory from './handleSynMessageFactory';\nimport { serializeMethods } from '../methodSerialization';\nimport monitorIframeRemoval from './monitorIframeRemoval';\nimport startConnectionTimeout from '../startConnectionTimeout';\nimport validateIframeHasSrcOrSrcDoc from './validateIframeHasSrcOrSrcDoc';\n/**\n * Attempts to establish communication with an iframe.\n */\nexport default (options) => {\n    let { iframe, methods = {}, childOrigin, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor('Parent', log);\n    const { onDestroy, destroy } = destructor;\n    if (!childOrigin) {\n        validateIframeHasSrcOrSrcDoc(iframe);\n        childOrigin = getOriginFromSrc(iframe.src);\n    }\n    // If event.origin is \"null\", the remote protocol is file: or data: and we\n    // must post messages with \"*\" as targetOrigin when sending messages.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n    const originForSending = childOrigin === 'null' ? '*' : childOrigin;\n    const serializedMethods = serializeMethods(methods);\n    const handleSynMessage = handleSynMessageFactory(log, serializedMethods, childOrigin, originForSending);\n    const handleAckMessage = handleAckMessageFactory(serializedMethods, childOrigin, originForSending, destructor, log);\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            if (event.source !== iframe.contentWindow || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.Syn) {\n                handleSynMessage(event);\n                return;\n            }\n            if (event.data.penpal === MessageType.Ack) {\n                const callSender = handleAckMessage(event);\n                if (callSender) {\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n                return;\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        log('Parent: Awaiting handshake');\n        monitorIframeRemoval(iframe, destructor);\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (error) {\n                reject(error);\n            }\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        },\n    };\n};\n","<script>\r\n\timport IFrame from './IFrame.svelte';\r\n\t// import srcdoc from './srcdoc/index.html?raw';\r\n\timport srcdoc from './srcdoc/bundled.html?raw';\r\n\timport { CHANGE } from './iframeSrc/constants.js';\r\n\timport { connectToChild } from 'penpal';\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\texport let esModule; // TODO: Handle error if not found\r\n\texport let props; // the consumer of this <Gateway bind:props /> component should bind the props to get updates\r\n\texport let serializedSource;\r\n\r\n\tlet iframe;\r\n\tlet child; // iframe child, using penpal library\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\t// this fires when props change; emits an event to update any listeners consuming this compiled component\r\n\t$: if (props) dispatch(CHANGE, props);\r\n\r\n\t// $: esModule && load({ esModule, props });\r\n\t$: iframe && iframe.addEventListener('load', handleLoad);\r\n\r\n\t// Wait for the iframe to load, then configure it\r\n\tconst handleLoad = async () => {\r\n\t\tif (!esModule) throw new Error('Missing esModule');\r\n\r\n\t\t// This is where the magic begins.\r\n\t\tconst connection = connectToChild({\r\n\t\t\t// The iframe to which a connection should be made.\r\n\t\t\tiframe,\r\n\t\t\t// Methods the parent is exposing to the iframe child.\r\n\t\t\tmethods: {\r\n\t\t\t\tupdateProps(newProps) {\r\n\t\t\t\t\tprops = { ...props, ...newProps }; // assign the props to the props object, overwriting as necessary\r\n\t\t\t\t},\r\n\t\t\t\tsetSerializedSource() {\r\n\t\t\t\t\t// alternatively, we could pass the content in through an argument\r\n\t\t\t\t\t// but this way we can check up on untrusted code\r\n\t\t\t\t\tserializedSource = new XMLSerializer().serializeToString(iframe?.contentWindow.document);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tchild = await connection.promise;\r\n\t\tchild.loadEsModuleComponent({ esModule, props });\r\n\t};\r\n</script>\r\n\r\n<IFrame bind:iframe {srcdoc} {serializedSource} />\r\n","import { getContext } from 'svelte';\nimport { browser } from './env.js';\nimport '../env.js';\n\n// TODO remove this (for 1.0? after 1.0?)\nlet warned = false;\nfunction stores() {\n\tif (!warned) {\n\t\tconsole.error('stores() is deprecated; use getStores() instead');\n\t\twarned = true;\n\t}\n\treturn getStores();\n}\n\n/**\n * @type {import('$app/stores').getStores}\n */\nconst getStores = () => {\n\tconst stores = getContext('__svelte__');\n\n\treturn {\n\t\tpage: {\n\t\t\tsubscribe: stores.page.subscribe\n\t\t},\n\t\tnavigating: {\n\t\t\tsubscribe: stores.navigating.subscribe\n\t\t},\n\t\t// TODO remove this (for 1.0? after 1.0?)\n\t\t// @ts-expect-error - deprecated, not part of type definitions, but still callable\n\t\tget preloading() {\n\t\t\tconsole.error('stores.preloading is deprecated; use stores.navigating instead');\n\t\t\treturn {\n\t\t\t\tsubscribe: stores.navigating.subscribe\n\t\t\t};\n\t\t},\n\t\tsession: stores.session,\n\t\tupdated: stores.updated\n\t};\n};\n\n/** @type {typeof import('$app/stores').page} */\nconst page = {\n\t/** @param {(value: any) => void} fn */\n\tsubscribe(fn) {\n\t\tconst store = getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @type {typeof import('$app/stores').navigating} */\nconst navigating = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().navigating;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @param {string} verb */\nconst throw_error = (verb) => {\n\tthrow new Error(\n\t\tbrowser\n\t\t\t? `Cannot ${verb} session store before subscribing`\n\t\t\t: `Can only ${verb} session store in browser`\n\t);\n};\n\n/** @type {typeof import('$app/stores').session} */\nconst session = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().session;\n\n\t\tif (browser) {\n\t\t\tsession.set = store.set;\n\t\t\tsession.update = store.update;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tset: () => throw_error('set'),\n\tupdate: () => throw_error('update')\n};\n\n/** @type {typeof import('$app/stores').updated} */\nconst updated = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().updated;\n\n\t\tif (browser) {\n\t\t\tupdated.check = store.check;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tcheck: () => throw_error('check')\n};\n\nexport { getStores, navigating, page, session, stores, updated };\n","<script>\n\timport { onMount } from 'svelte';\n\timport Gateway from '@douganderson444/svelte-component-gateway';\n\timport { page } from '$app/stores';\n\n\tlet url = 'https://bafybeifeyoww62kxwmpdkqpqou6yxjpo7jstfxujfoxjy5exqjvldyqixu.ipfs.dweb.link';\n\n\tlet component;\n\n\tlet props = { name: 'Douglas' };\n\n\tlet width;\n\tlet height;\n\tlet vh;\n\n\tonMount(() => {\n\t\turl = $page.url.searchParams.get('url') || url;\n\t\thandleViewportSize();\n\t});\n\n\tfunction handleViewportSize(_) {\n\t\tvh = window.innerHeight * 0.01;\n\t\theight = window.innerHeight;\n\t\twidth = document?.body.clientWidth; // excludes scrollbar\n\t}\n\n\t$: if (url) doFetch(url);\n\n\tlet fetched;\n\n\tasync function doFetch(url) {\n\t\ttry {\n\t\t\tfetched = await fetch(url);\n\t\t\tconst text = await fetched.text();\n\t\t\tcomponent = text;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n</script>\n\n<svelte:window on:resize={handleViewportSize} />\n\n<div class=\"app\" style=\"--vh: {vh}px; height: calc(var(--vh, 1vh) * 100);\">\n\t<h1 class=\"text-3xl font-bold py-2\">Svelte Component Gateway</h1>\n\t<p class=\"my-2\">\n\t\tLoading from // make form input with url default\n\t\t<input type=\"text\" name=\"url\" bind:value={url} size=\"90\" class=\"border p-2\" />\n\t\t<a href={url} target=\"_blank\" class=\"underline text-blue-400\">{url}</a>\n\t</p>\n\n\tProps: {JSON.stringify(props)}\n\n\t<div class=\"border flex-auto\">\n\t\t{#if component}\n\t\t\t<Gateway esModule={component} bind:props {width} {height} />\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.app {\n\t\theight: 100vh; /* Fallback for browsers that do not support Custom Properties */\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n</style>\n"],"names":["create_if_block"],"mappings":"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"}